name: Run Tests
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  install-podman:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Podman
        uses: gacts/install-podman@v1

      - name: Run test script
        id: run-tests
        run: |
          chmod +x ./test.sh
          ./test.sh 2>&1 | tee test_output.log
          exit ${PIPESTATUS[0]}

      - name: Parse and Create Summary
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const log = fs.readFileSync('test_output.log', 'utf8');

            const cleanLog = log.replace(/\x1b\[[0-9;]*m/g, '');

            const failedTests = cleanLog.match(/FAIL\s+.+/g) || [];
            const passedTests = cleanLog.match(/âœ“\s+.+/g) || [];
            const totalTests = failedTests.length + passedTests.length;

            const sessions = cleanLog.match(/Session \d+ (created OK|closed)/g) || [];
            const failedSessions = cleanLog.match(/Start session failed.+/g) || [];

            const summary = `
            ## Test Summary
            - **Total Tests**: ${totalTests}
            - **Passed Tests**: ${passedTests.length}
            - **Failed Tests**: ${failedTests.length}
            - **Sessions Created**: ${sessions.filter(s => s.includes('created OK')).length}
            - **Sessions Closed**: ${sessions.filter(s => s.includes('closed')).length}
            - **Failed Sessions**: ${failedSessions.length}
            ### Failed Tests
            ${failedTests.length > 0 ? failedTests.map(test => `- ${test}`).join('\n') : 'None'}
            ### Passed Tests
            ${passedTests.length > 0 ? passedTests.map(test => `- ${test}`).join('\n') : 'None'}
            ### Session Errors
            ${failedSessions.length > 0 ? failedSessions.map(session => `- ${session}`).join('\n') : 'None'}
            `;

            core.summary.addRaw(summary).write();